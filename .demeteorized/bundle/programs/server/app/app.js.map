{"version":3,"sources":["meteor://ðŸ’»app/server/methods/locationMethods.js","meteor://ðŸ’»app/server/main.js","meteor://ðŸ’»app/both/accountsConfig.js","meteor://ðŸ’»app/both/backgroundLocations.js","meteor://ðŸ’»app/both/routes.js","meteor://ðŸ’»app/both/startup.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["Meteor.methods({\n    'updateLocation':function(userLocation){\n        var self = this;\n        if(self.userId){\n            console.log(JSON.stringify(userLocation));\n            return Meteor.users.update({'_id':self.userId},{\n                $set:{\n                    'profile.backgroundLocation':userLocation\n                }\n            })\n        }\n    }\n})","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n","\nmySubmitFunc = function(error, state){\n    if (!error) {\n        if (state === \"signIn\") {\n            //window.location.reload()\n            return true\n\n        }\n        if (state === \"signUp\") {\n            return true\n            // Successfully registered\n            //FlowRouter.go('/settings/'+Meteor.user()._id)\n\n\n        }\n    }\n};\n\n\n\n\nAccountsTemplates.configure({\n    // Behavior\n    confirmPassword: false,\n    enablePasswordChange: true,\n    forbidClientAccountCreation: false,\n    overrideLoginErrors: true,\n    sendVerificationEmail: false,\n    lowercaseUsername: false,\n    focusFirstInput: false,\n    socialLoginStyle:'redirect',\n\n    // Appearance\n    showAddRemoveServices: false,\n    showForgotPasswordLink: false,\n    showLabels: true,\n    showPlaceholders: true,\n    showResendVerificationEmailLink: false,\n\n\n    // Client-side Validation\n    continuousValidation: false,\n    negativeFeedback: false,\n    negativeValidation: true,\n    positiveValidation: true,\n    positiveFeedback: true,\n    showValidating: true,\n\n    // Privacy Policy and Terms of Use\n    //privacyUrl: 'privacy',\n    //termsUrl: 'terms-of-use',\n\n    // Redirects\n    //homeRoutePath: '/',\n    //redirectTimeout: 4000,\n\n    // Hooks\n    //onLogoutHook: myLogoutFunc,\n    //onSubmitHook: mySubmitFunc,\n    //preSignUpHook: myPreSubmitFunc,\n    hideSignInLink:false,\n    hideSignUpLink:false,\n    // Texts\n    texts: {\n        title: {\n            changePwd: \"Password Title\",\n            enrollAccount: \"Enroll Title\",\n            forgotPwd: \"Forgot Pwd Title\",\n            resetPwd: \"Reset Pwd Title\",\n            signIn: \"Sign In\",\n            signUp: \"Create Your Account\",\n            verifyEmail: \"Verify Email Title\",\n\n        },\n        errors: {\n            accountsCreationDisabled: \"Client side accounts creation is disabled!!!\",\n            cannotRemoveService: \"Cannot remove the only active service!\",\n            captchaVerification: \"Captcha verification failed!\",\n            loginForbidden: \"error.accounts.Incorrect username or password\",\n            mustBeLoggedIn: \"error.accounts.Must be logged in\",\n            pwdMismatch: \"error.pwdsDontMatch\",\n            validationErrors: \"Validation Errors\",\n            verifyEmailFirst: \"Please verify your email first. Check the email and follow the link!\",\n        }\n    }\n});\n\n\n//AccountsTemplates.addField({\n//    _id: \"address\",\n//    type: \"text\",\n//    required:true,\n//    // Options object with custom properties for my layout. At the moment, there are\n//    // no special properties; it is up the developer to invent them\n//    options: {\n//        // Put a divider before this field\n//        dividerBefore: true,\n//\n//    }\n//});\n\n\n//var pwd = AccountsTemplates.removeField('password');\n\n","//Only start if this is a cordova project\nif (Meteor.isCordova) {\n    //Only run commands after cordova has finished device Ready\n    Meteor.startup(function() {\n        //Configure Plugin\n        BackgroundLocation.configure({\n            desiredAccuracy: 5, // Desired Accuracy of the location updates (lower = more accurate).\n            distanceFilter: 1, // (Meters) Distance between points aquired.\n            debug: false, // Show debugging info on device.\n            interval: 9000, // (Milliseconds) Requested Interval in between location updates.\n            //[Android Only Below]\n            notificationTitle: 'BG Plugin', // Customize the title of the notification.\n            notificationText: 'Tracking', // Customize the text of the notification.\n            fastestInterval: 5000, //(Milliseconds) - Fastest interval OS will give updates.\n            useActivityDetection : true // Shuts off GPS when your phone is still, increasing battery life enormously\n        });\n\n        //Register a callback for location updates.\n        //this is where location objects will be sent in the background\n        BackgroundLocation.registerForLocationUpdates(function (location) {\n\n            console.log(\"We got a Background Update\" + JSON.stringify(location));\n\n            Meteor.call('updateLocation',location);\n\n        }, function (err) {\n            console.log(\"Error: Didnt get an update\", err);\n        });\n\n        //Start the Background Tracker.\n        //When you enter the background tracking will start.\n        BackgroundLocation.start();\n\n        ///later, to stop\n        //BackgroundLocation.stop();\n\n    });\n}\n","\nFlowRouter.route('/', {\n    // do some action for this route\n    action: function(params, queryParams) {\n        console.log(\"Params:\", params);\n        console.log(\"Query Params:\", queryParams);\n        BlazeLayout.render('globalLayout', {main: 'home'});\n\n    },\n\n});","\n\nif (Meteor.isClient) {\n    Meteor.startup(function() {\n        GoogleMaps.load();\n    });\n}\n\nif (Meteor.isServer) {\n    Meteor.startup(function() {\n        console.log('server is started!')\n    });\n}"]}